const {
  SlashCommandBuilder,
  ActionRowBuilder,
  EmbedBuilder,
  AttachmentBuilder,
} = require("discord.js");
const openModalBtn = require("../../components/openSimpleModalBtn/openSimpleModalBtn");
const openComplexModalBtn = require("../../components/openComplexModal/openComplexModal");
const createGiftEmbed = require("../../utils/gifts/createGiftEmbed");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("claim-gift")
    .setDescription("–û—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–∂–∞–Ω–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫")
    .setContexts(0, 1)
    .addNumberOption((option) =>
      option
        .setName("gift-id")
        .setDescription("–ù–æ–º–µ—Ä –ø–æ–¥–∞—Ä—É–Ω–∫—É")
        .setRequired(true)
    ),
  async execute(interaction) {
    if (interaction.inGuild()) {
      return await interaction.reply({
        content:
          "–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –ª–∏—à–µ –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö –∑—ñ –º–Ω–æ—éüòâ",
      });
    }
    const value = interaction.options.get("gift-id").value;
    await interaction.deferReply();
    const resp = await fetch(
      "https://" + process.env.FEMIDA_API + `/gifts/${value}`,
      {
        headers: { Authorization: `Bearer ${process.env.FEMIDA_API_TOKEN}` },
      }
    );
    const { gift } = await resp.json();
    if (!gift) {
      const errorEmbed = new EmbedBuilder()
        .setColor("#D04848")
        .setTitle("–ü–æ–¥–∞—Ä—É–Ω–∫–∞ –∑ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ :(")
        .setDescription(
          "–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ –≤–≤—ñ–≤ –Ω–æ–º–µ—Ä –≤—ñ—Ä–Ω–æ. \n –ü–æ—Ç—ñ–º —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑"
        )
        .setThumbnail("attachment://undefined.gif");
      const attachments = [
        new AttachmentBuilder("src/imgs/undefined.gif", "undefined.gif"),
      ];
      return await interaction.editReply({
        files: attachments,
        embeds: [errorEmbed],
      });
    }
    console.log(gift);
    const embed = await createGiftEmbed(gift);
    if (gift?.isVirtual) {
      await interaction.editReply({
        embeds: [embed],
        content:
          "–¶–µ–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –Ω–µ —Ç—Ä–µ–±–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ –ø–æ—à—Ç–æ—é, —Ç–æ–º—É —Ü—ñ –¥–∞–Ω—ñ - –ª–∏—à–µ —Ñ–æ—Ä–º–∞–ª—å–Ω—ñ—Å—Ç—å‚úÖ",
        components: [
          new ActionRowBuilder().addComponents(openModalBtn.component),
        ],
      });
    } else {
      await interaction.editReply({
        embeds: [embed],
        content:
          "‚ùó–ó–≤–µ—Ä—Ç–∞—é —Ç–≤–æ—é —É–≤–∞–≥—É –Ω–∞ —Ç–µ, —â–æ –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ **—Ç—ñ–ª—å–∫–∏** –ù–æ–≤—É –ü–æ—à—Ç—É –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä—É–Ω–∫—ñ–≤",
        components: [
          new ActionRowBuilder().addComponents(openComplexModalBtn.component),
        ],
      });
    }
  },
};
