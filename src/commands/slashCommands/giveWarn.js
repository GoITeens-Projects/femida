const { SlashCommandBuilder, EmbedBuilder } = require("discord.js");
const {
  roles: { adminRoles },
} = require("../../constants/config");
const WarnSystem = require("../../utils/warnSystem");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("give-warn")
    .setDescription("–í–∏–¥–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è (–≤–∞—Ä–Ω) –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É")
    .addUserOption((option) =>
      option
        .setName("target-user")
        .setDescription("–ù—ñ–∫–Ω–µ–π–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–æ–º—É —Ç—Ä–µ–±–∞ –¥–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è")
        .setRequired(true)
    )
    .addStringOption((option) =>
      option
        .setName("is-soft")
        .setDescription("–í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ '–º`—è–∫–µ' –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è, —á–∏ –∑–≤–∏—á–∞–π–Ω–µ?")
        .addChoices(
          { name: "–∑–≤–∏—á–∞–π–Ω–µ", value: "default" },
          { name: "–º'—è–∫–µ", value: "soft" }
        )
        .setRequired(true)
    )
    .addStringOption((option) =>
      option
        .setName("reason")
        .setDescription(
          "–ü—Ä–∏—á–∏–Ω–∞, –∑ —è–∫–æ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Å–ª—É–≥–æ–≤—É—î –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è"
        )
        .setRequired(true)
    ),
  async execute(interaction) {
    try {
      await interaction.deferReply();
      if (!interaction.inGuild()) {
        await interaction.editReply(
          "–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ"
        );
        return;
      }
      // if (!interaction.member.roles.cache.some((role) => adminRoles.includes(role.id))) {
      //   interaction.reply(
      //     "–¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è –º–∞—î –ø—Ä–∞–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—ÉüôÉ"
      //   );
      //   return;
      // }
      const data = {
        userId: interaction.options.get("target-user")?.value,
        isSoft: interaction.options.get("is-soft")?.value === "soft",
        reason: interaction.options.get("reason")?.value,
      };
      if (data.isSoft) {
        await WarnSystem.giveSoftWarn(data.userId, data.reason, true);
        const embed = new EmbedBuilder()
          .setTitle("–ú'—è–∫–µ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–Ω–æ")
          .setColor("#FFD23F")
          .setDescription(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á <@${data.userId}> –≤–∂–µ –ø—Ä–æ —Ü–µ —Å–ø–æ–≤—ñ—â–µ–Ω–∏–π`)
          .setTimestamp();
        await interaction.editReply({ embeds: [embed] });
        return;
      } else {
        await WarnSystem.giveWarn(data.userId, data.reason, true);
        const embed = new EmbedBuilder()
          .setTitle("–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–Ω–æ")
          .setColor("#FFD23F")
          .setDescription(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á <@${data.userId}> –≤–∂–µ –ø—Ä–æ —Ü–µ —Å–ø–æ–≤—ñ—â–µ–Ω–∏–π`)
          .setTimestamp();
        await interaction.editReply({ embeds: [embed] });
      }
    } catch (err) {
      console.log("Error in giveWarn", err);
    }
  },
};
